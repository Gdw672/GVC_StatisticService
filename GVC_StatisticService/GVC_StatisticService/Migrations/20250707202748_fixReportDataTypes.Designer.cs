// <auto-generated />
using System;
using GVC_StatisticService.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GVC_StatisticService.Migrations
{
    [DbContext(typeof(StatisticDbContext))]
    [Migration("20250707202748_fixReportDataTypes")]
    partial class fixReportDataTypes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GVC_StatisticService.Model.Report.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("IP_адрес")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("АСОЗ")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("ВОЗВРАЩЕНО")
                        .HasColumnType("boolean");

                    b.Property<bool?>("ВОЗВРАЩЕНО_ОШИБОЧНО")
                        .HasColumnType("boolean");

                    b.Property<string>("ВП")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("ВРЕМЯ_ЗАКРЫТИЯ")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Вр__создания_обращения")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Вр__создания_обращения_с_учетом_ЗО_инициатора")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double?>("Доля")
                        .HasColumnType("double precision");

                    b.Property<string>("Исполнитель")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("КРАТКОЕ_ОПИСАНИЕ")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Код_мероприятия_РРО")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Направление_РГ")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Направление_проблем")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Наряд")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ОСК")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Обращение")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Объект")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ПОДРОБНОЕ_ОПИСАНИЕ")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Подразделение_инициатора")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Полигон_инициатора")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Порядок")
                        .HasColumnType("integer");

                    b.Property<string>("Причина_обращения")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("РЕШЕНИЕ")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("РПА")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Рабочая_группа")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Способ_обращения")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("ТЗ")
                        .HasColumnType("double precision");

                    b.Property<string>("Услуга")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ФИО")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Шаблон_запроса")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ЭК_запроса_наряда")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ЭК_робота")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("reports");
                });

            modelBuilder.Entity("GVC_StatisticService.Model.SCO_service.SCO_service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SCO_services");
                });

            modelBuilder.Entity("GVC_StatisticService.Model.SCO_types.SCO_type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SCO_types");
                });
#pragma warning restore 612, 618
        }
    }
}
